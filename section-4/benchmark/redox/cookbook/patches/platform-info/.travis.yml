# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

addons:
  apt:
    packages:
      - libssl-dev

after_success: |
  if [ "$TARGET" = x86_64-unknown-linux-gnu -a "$TRAVIS_RUST_VERSION" = stable ]; then
    bash <(curl https://raw.githubusercontent.com/xd009642/tarpaulin/master/travis-install.sh)
    cargo tarpaulin --out Xml
    bash <(curl -s https://codecov.io/bash)
  fi

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=platform-info

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Android
    - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
    - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
    - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
    - env: TARGET=i686-linux-android DISABLE_TESTS=1
    - env: TARGET=x86_64-linux-android DISABLE_TESTS=1

    # iOS
    - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
      os: osx
    - env: TARGET=armv7-apple-ios DISABLE_TESTS=1
      os: osx
    - env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
      os: osx
    - env: TARGET=i386-apple-ios DISABLE_TESTS=1
      os: osx
    - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
      os: osx

    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # Redox
    - env: TARGET=x86_64-unknown-redox CC=x86_64-unknown-redox-gcc REDOX=1 DISABLE_TESTS=1

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update
  - if [ $REDOX ]; then bash .travis/redox-toolchain.sh; fi

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "MuEDd+Gr6R8QYtfW2hiA84iJN85x3mP1PXa3Cu21paX9rYAtOte6LdxHfl7J22qQa2t/+Mu7aI1JF5g0apCPrWHizjhcS626PFfJYh2YKJnR8vD9ExjhSAYep29VPcOQan3FzklleG9skX5dxwUweMCXXOycsBlnDr3NJsnLgIk0EkWhpveIt/AefODuSFefPasUkxo9XenjXqYzBqI3OdOBbWoGLBTL9DtZ95Zxoi00pHTsL8sTg6ucatxnL6RToIiUXI8+hr+DsHcr5eFX5OMml0i2+rEgh5ZHANJZII3TwJulMj5YwRLMvNz7R7RKZVr2eTxItG2sy44L9F/QSDQ4LQhLg5tQVmG1wzrAgbPJXoEoj8aeLVBMCfrqCXoGMkTfQwsLiVqnCrg3tzcBju3/vZ/fz0hmKSxFCTb+P+zt86dEXXDd+zTHmG7scvcEVLsALdKKDtH4F7pb0kj1Sam6CwSMKraJpF0I9bi/jDGVtmiB6sMs8RCK27dqzGgZWA0uI86iRedE2DmkJMHtIdbPix8897sHZUzuvgLnMcI2nEtIM6dyQGRRw0SYysO1KxfJDWerd6l2q/DuSLDXM6VC4rhjkQTuHtjtULtkg9ObhEW2BC6nwKho3Yj2MKiJalpN0+E0Rx5Ii1mG4Dhqd5azypc+m8nkDkIJaA385Ig="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
