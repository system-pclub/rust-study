error[E0106]: missing lifetime specifier
  --> $DIR/lifetime-elision-return-type-requires-explicit-lifetime.rs:2:11
   |
LL | fn f() -> &isize {
   |           ^ help: consider giving it a 'static lifetime: `&'static`
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from

error[E0106]: missing lifetime specifier
  --> $DIR/lifetime-elision-return-type-requires-explicit-lifetime.rs:7:33
   |
LL | fn g(_x: &isize, _y: &isize) -> &isize {
   |                                 ^ expected lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `_x` or `_y`

error[E0106]: missing lifetime specifier
  --> $DIR/lifetime-elision-return-type-requires-explicit-lifetime.rs:17:19
   |
LL | fn h(_x: &Foo) -> &isize {
   |                   ^ expected lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say which one of `_x`'s 2 lifetimes it is borrowed from

error[E0106]: missing lifetime specifier
  --> $DIR/lifetime-elision-return-type-requires-explicit-lifetime.rs:21:20
   |
LL | fn i(_x: isize) -> &isize {
   |                    ^ help: consider giving it an explicit bounded or 'static lifetime: `&'static`
   |
   = help: this function's return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments

error[E0106]: missing lifetime specifier
  --> $DIR/lifetime-elision-return-type-requires-explicit-lifetime.rs:34:24
   |
LL | fn j(_x: StaticStr) -> &isize {
   |                        ^ help: consider giving it an explicit bounded or 'static lifetime: `&'static`
   |
   = help: this function's return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments

error[E0106]: missing lifetime specifier
  --> $DIR/lifetime-elision-return-type-requires-explicit-lifetime.rs:40:49
   |
LL | fn k<'a, T: WithLifetime<'a>>(_x: T::Output) -> &isize {
   |                                                 ^ help: consider giving it an explicit bounded or 'static lifetime: `&'static`
   |
   = help: this function's return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments

error: aborting due to 6 previous errors

For more information about this error, try `rustc --explain E0106`.
