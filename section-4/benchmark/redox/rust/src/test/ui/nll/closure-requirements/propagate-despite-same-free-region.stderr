note: External requirements
  --> $DIR/propagate-despite-same-free-region.rs:42:9
   |
LL | /         |_outlives1, _outlives2, x, y| {
LL | |             // Only works if 'x: 'y:
LL | |             let p = x.get();
LL | |             demand_y(x, y, p)
LL | |         },
   | |_________^
   |
   = note: defining type: DefId(0:14 ~ propagate_despite_same_free_region[317d]::supply[0]::{{closure}}[0]) with closure substs [
               i16,
               for<'r, 's> extern "rust-call" fn((std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0), 's)) &'_#2r u32>, std::cell::Cell<&ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0), 's)) u32>)),
           ]
   = note: late-bound region is '_#3r
   = note: number of external vids: 4
   = note: where '_#1r: '_#2r

note: No external requirements
  --> $DIR/propagate-despite-same-free-region.rs:39:1
   |
LL | / fn supply<'a>(cell_a: Cell<&'a u32>) {
LL | |     establish_relationships(
LL | |         cell_a,
LL | |         |_outlives1, _outlives2, x, y| {
...  |
LL | |     );
LL | | }
   | |_^
   |
   = note: defining type: DefId(0:12 ~ propagate_despite_same_free_region[317d]::supply[0]) with substs []

