note: External requirements
  --> $DIR/escape-upvar-ref.rs:23:27
   |
LL |         let mut closure = || p = &y;
   |                           ^^^^^^^^^
   |
   = note: defining type: DefId(0:4 ~ escape_upvar_ref[317d]::test[0]::{{closure}}[0]) with closure substs [
               i16,
               extern "rust-call" fn(()),
               &'_#1r i32,
               &'_#2r mut &'_#3r i32,
           ]
   = note: number of external vids: 4
   = note: where '_#1r: '_#3r

note: No external requirements
  --> $DIR/escape-upvar-ref.rs:17:1
   |
LL | / fn test() {
LL | |     let x = 44;
LL | |     let mut p = &x;
LL | |
...  |
LL | |     deref(p);
LL | | }
   | |_^
   |
   = note: defining type: DefId(0:3 ~ escape_upvar_ref[317d]::test[0]) with substs []

error[E0597]: `y` does not live long enough
  --> $DIR/escape-upvar-ref.rs:23:35
   |
LL |         let mut closure = || p = &y;
   |                           --      ^ borrowed value does not live long enough
   |                           |
   |                           value captured here
...
LL |     }
   |     - `y` dropped here while still borrowed
LL | 
LL |     deref(p);
   |           - borrow later used here

error: aborting due to previous error

For more information about this error, try `rustc --explain E0597`.
