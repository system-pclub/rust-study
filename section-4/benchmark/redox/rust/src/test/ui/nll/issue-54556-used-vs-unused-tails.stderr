error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:10:55
   |
LL |     {              let mut _t1 = D(Box::new("t1")); D(&_t1).end()    } ; // suggest `;`
   |                                                     --^^^^-          - - ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | |              |
   |                                                     | |              `_t1` dropped here while still borrowed
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider adding semicolon after the expression so its temporaries are dropped sooner, before the local variables declared by the block are dropped.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:13:55
   |
LL |     {            { let mut _t1 = D(Box::new("t1")); D(&_t1).end() }  } ; // suggest `;`
   |                                                     --^^^^-       -    - ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | |           |
   |                                                     | |           `_t1` dropped here while still borrowed
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider adding semicolon after the expression so its temporaries are dropped sooner, before the local variables declared by the block are dropped.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:16:55
   |
LL |     {            { let mut _t1 = D(Box::new("t1")); D(&_t1).end() }; }   // suggest `;`
   |                                                     --^^^^-       -- ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | |           |
   |                                                     | |           `_t1` dropped here while still borrowed
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider adding semicolon after the expression so its temporaries are dropped sooner, before the local variables declared by the block are dropped.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:19:55
   |
LL |     let _ =      { let mut _t1 = D(Box::new("t1")); D(&_t1).end()    } ; // suggest `;`
   |                                                     --^^^^-          - - ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | |              |
   |                                                     | |              `_t1` dropped here while still borrowed
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider adding semicolon after the expression so its temporaries are dropped sooner, before the local variables declared by the block are dropped.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:22:55
   |
LL |     let _u =     { let mut _t1 = D(Box::new("t1")); D(&_t1).unit()   } ; // suggest `;`
   |                                                     --^^^^-          - - ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | |              |
   |                                                     | |              `_t1` dropped here while still borrowed
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider adding semicolon after the expression so its temporaries are dropped sooner, before the local variables declared by the block are dropped.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:25:55
   |
LL |     let _x =     { let mut _t1 = D(Box::new("t1")); D(&_t1).end()    } ; // `let x = ...; x`
   |                                                     --^^^^-          - - ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | |              |
   |                                                     | |              `_t1` dropped here while still borrowed
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider forcing this temporary to be dropped sooner, before the block's local variables are dropped. For example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:30:55
   |
LL |     _y =         { let mut _t1 = D(Box::new("t1")); D(&_t1).end() } ; // `let x = ...; x`
   |                                                     --^^^^-       - - ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | |           |
   |                                                     | |           `_t1` dropped here while still borrowed
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider forcing this temporary to be dropped sooner, before the block's local variables are dropped. For example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:37:55
   |
LL | fn f_local_ref() { let mut _t1 = D(Box::new("t1")); D(&_t1).unit()   }  // suggest `;`
   |                                                     --^^^^-          -
   |                                                     | |              |
   |                                                     | |              `_t1` dropped here while still borrowed
   |                                                     | |              ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider adding semicolon after the expression so its temporaries are dropped sooner, before the local variables declared by the block are dropped.

error[E0597]: `_t1` does not live long enough
  --> $DIR/issue-54556-used-vs-unused-tails.rs:40:55
   |
LL | fn f() -> String { let mut _t1 = D(Box::new("t1")); D(&_t1).end()   }   // `let x = ...; x`
   |                                                     --^^^^-         -
   |                                                     | |             |
   |                                                     | |             `_t1` dropped here while still borrowed
   |                                                     | |             ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `D`
   |                                                     | borrowed value does not live long enough
   |                                                     a temporary with access to the borrow is created here ...
   |
   = note: The temporary is part of an expression at the end of a block. Consider forcing this temporary to be dropped sooner, before the block's local variables are dropped. For example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block.

error: aborting due to 9 previous errors

For more information about this error, try `rustc --explain E0597`.
