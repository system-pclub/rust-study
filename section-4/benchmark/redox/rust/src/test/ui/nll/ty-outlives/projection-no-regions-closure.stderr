note: External requirements
  --> $DIR/projection-no-regions-closure.rs:25:23
   |
LL |     with_signature(x, |mut y| Box::new(y.next()))
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0:13 ~ projection_no_regions_closure[317d]::no_region[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               T,
               i32,
               extern "rust-call" fn((std::boxed::Box<T>,)) -> std::boxed::Box<(dyn Anything + '_#2r)>,
           ]
   = note: number of external vids: 3
   = note: where <T as std::iter::Iterator>::Item: '_#2r

note: No external requirements
  --> $DIR/projection-no-regions-closure.rs:21:1
   |
LL | / fn no_region<'a, T>(x: Box<T>) -> Box<dyn Anything + 'a>
LL | | where
LL | |     T: Iterator,
LL | | {
LL | |     with_signature(x, |mut y| Box::new(y.next()))
LL | |
LL | | }
   | |_^
   |
   = note: defining type: DefId(0:10 ~ projection_no_regions_closure[317d]::no_region[0]) with substs [
               '_#1r,
               T,
           ]

error[E0309]: the associated type `<T as std::iter::Iterator>::Item` may not live long enough
  --> $DIR/projection-no-regions-closure.rs:25:23
   |
LL |     with_signature(x, |mut y| Box::new(y.next()))
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `<T as std::iter::Iterator>::Item: ReEarlyBound(0, 'a)`...

note: External requirements
  --> $DIR/projection-no-regions-closure.rs:34:23
   |
LL |     with_signature(x, |mut y| Box::new(y.next()))
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0:17 ~ projection_no_regions_closure[317d]::correct_region[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               T,
               i32,
               extern "rust-call" fn((std::boxed::Box<T>,)) -> std::boxed::Box<(dyn Anything + '_#2r)>,
           ]
   = note: number of external vids: 3
   = note: where <T as std::iter::Iterator>::Item: '_#2r

note: No external requirements
  --> $DIR/projection-no-regions-closure.rs:30:1
   |
LL | / fn correct_region<'a, T>(x: Box<T>) -> Box<dyn Anything + 'a>
LL | | where
LL | |     T: 'a + Iterator,
LL | | {
LL | |     with_signature(x, |mut y| Box::new(y.next()))
LL | | }
   | |_^
   |
   = note: defining type: DefId(0:14 ~ projection_no_regions_closure[317d]::correct_region[0]) with substs [
               '_#1r,
               T,
           ]

note: External requirements
  --> $DIR/projection-no-regions-closure.rs:42:23
   |
LL |     with_signature(x, |mut y| Box::new(y.next()))
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0:22 ~ projection_no_regions_closure[317d]::wrong_region[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               '_#2r,
               T,
               i32,
               extern "rust-call" fn((std::boxed::Box<T>,)) -> std::boxed::Box<(dyn Anything + '_#3r)>,
           ]
   = note: number of external vids: 4
   = note: where <T as std::iter::Iterator>::Item: '_#3r

note: No external requirements
  --> $DIR/projection-no-regions-closure.rs:38:1
   |
LL | / fn wrong_region<'a, 'b, T>(x: Box<T>) -> Box<dyn Anything + 'a>
LL | | where
LL | |     T: 'b + Iterator,
LL | | {
LL | |     with_signature(x, |mut y| Box::new(y.next()))
LL | |
LL | | }
   | |_^
   |
   = note: defining type: DefId(0:18 ~ projection_no_regions_closure[317d]::wrong_region[0]) with substs [
               '_#1r,
               '_#2r,
               T,
           ]

error[E0309]: the associated type `<T as std::iter::Iterator>::Item` may not live long enough
  --> $DIR/projection-no-regions-closure.rs:42:23
   |
LL |     with_signature(x, |mut y| Box::new(y.next()))
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `<T as std::iter::Iterator>::Item: ReEarlyBound(0, 'a)`...

note: External requirements
  --> $DIR/projection-no-regions-closure.rs:52:23
   |
LL |     with_signature(x, |mut y| Box::new(y.next()))
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0:27 ~ projection_no_regions_closure[317d]::outlives_region[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               '_#2r,
               T,
               i32,
               extern "rust-call" fn((std::boxed::Box<T>,)) -> std::boxed::Box<(dyn Anything + '_#3r)>,
           ]
   = note: number of external vids: 4
   = note: where <T as std::iter::Iterator>::Item: '_#3r

note: No external requirements
  --> $DIR/projection-no-regions-closure.rs:47:1
   |
LL | / fn outlives_region<'a, 'b, T>(x: Box<T>) -> Box<dyn Anything + 'a>
LL | | where
LL | |     T: 'b + Iterator,
LL | |     'b: 'a,
LL | | {
LL | |     with_signature(x, |mut y| Box::new(y.next()))
LL | | }
   | |_^
   |
   = note: defining type: DefId(0:23 ~ projection_no_regions_closure[317d]::outlives_region[0]) with substs [
               '_#1r,
               '_#2r,
               T,
           ]

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0309`.
