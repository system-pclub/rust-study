// run-rustfix

trait T {
    unsafe fn foo(a: &usize, b: &usize) -> usize;
    fn bar(&self, a: &usize, b: &usize) -> usize;
}

mod foo {
    use super::T;
    impl T for () {    fn bar(&self, _: &usize, _: &usize) -> usize { unimplemented!() }
        unsafe fn foo(_: &usize, _: &usize) -> usize { unimplemented!() }
    } //~ ERROR not all trait items

    impl T for usize { //~ ERROR not all trait items
        fn bar(&self, _: &usize, _: &usize) -> usize { unimplemented!() }
        unsafe fn foo(_: &usize, _: &usize) -> usize { unimplemented!() }
    }
}

fn main() {}
