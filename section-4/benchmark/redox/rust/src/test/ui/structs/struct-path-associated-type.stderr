error[E0071]: expected struct, variant or union type, found associated type
  --> $DIR/struct-path-associated-type.rs:12:13
   |
LL |     let s = T::A {};
   |             ^^^^ not a struct

error[E0109]: type arguments are not allowed for this type
  --> $DIR/struct-path-associated-type.rs:14:20
   |
LL |     let z = T::A::<u8> {};
   |                    ^^ type argument not allowed

error[E0071]: expected struct, variant or union type, found associated type
  --> $DIR/struct-path-associated-type.rs:14:13
   |
LL |     let z = T::A::<u8> {};
   |             ^^^^^^^^^^ not a struct

error[E0071]: expected struct, variant or union type, found associated type
  --> $DIR/struct-path-associated-type.rs:18:9
   |
LL |         T::A {} => {}
   |         ^^^^ not a struct

error[E0109]: type arguments are not allowed for this type
  --> $DIR/struct-path-associated-type.rs:25:20
   |
LL |     let z = T::A::<u8> {};
   |                    ^^ type argument not allowed

error[E0223]: ambiguous associated type
  --> $DIR/struct-path-associated-type.rs:32:13
   |
LL |     let s = S::A {};
   |             ^^^^ help: use fully-qualified syntax: `<S as Trait>::A`

error[E0109]: type arguments are not allowed for this type
  --> $DIR/struct-path-associated-type.rs:33:20
   |
LL |     let z = S::A::<u8> {};
   |                    ^^ type argument not allowed

error[E0223]: ambiguous associated type
  --> $DIR/struct-path-associated-type.rs:33:13
   |
LL |     let z = S::A::<u8> {};
   |             ^^^^^^^^^^ help: use fully-qualified syntax: `<S as Trait>::A`

error[E0223]: ambiguous associated type
  --> $DIR/struct-path-associated-type.rs:36:9
   |
LL |         S::A {} => {}
   |         ^^^^ help: use fully-qualified syntax: `<S as Trait>::A`

error: aborting due to 9 previous errors

Some errors have detailed explanations: E0071, E0109, E0223.
For more information about an error, try `rustc --explain E0071`.
