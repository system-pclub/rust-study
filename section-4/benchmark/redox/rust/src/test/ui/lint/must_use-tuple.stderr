error: unused `std::result::Result` in tuple element 0 that must be used
  --> $DIR/must_use-tuple.rs:8:6
   |
LL |     (Ok::<(), ()>(()),);
   |      ^^^^^^^^^^^^^^^^
   |
note: lint level defined here
  --> $DIR/must_use-tuple.rs:1:9
   |
LL | #![deny(unused_must_use)]
   |         ^^^^^^^^^^^^^^^
   = note: this `Result` may be an `Err` variant, which should be handled

error: unused `std::result::Result` in tuple element 0 that must be used
  --> $DIR/must_use-tuple.rs:10:6
   |
LL |     (Ok::<(), ()>(()), 0, Ok::<(), ()>(()), 5);
   |      ^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

error: unused `std::result::Result` in tuple element 2 that must be used
  --> $DIR/must_use-tuple.rs:10:27
   |
LL |     (Ok::<(), ()>(()), 0, Ok::<(), ()>(()), 5);
   |                           ^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

error: unused `std::result::Result` in tuple element 0 that must be used
  --> $DIR/must_use-tuple.rs:14:5
   |
LL |     foo();
   |     ^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

error: unused `std::result::Result` in tuple element 0 that must be used
  --> $DIR/must_use-tuple.rs:16:6
   |
LL |     ((Err::<(), ()>(()), ()), ());
   |      ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

error: aborting due to 5 previous errors

