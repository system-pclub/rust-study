error[E0277]: `std::cell::UnsafeCell<MySync<{integer}>>` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:19:10
   |
LL | fn test<T: Sync>(s: T) {}
   |    ----    ---- required by this bound in `test`
...
LL |     test(us);
   |          ^^ `std::cell::UnsafeCell<MySync<{integer}>>` cannot be shared between threads safely
   |
   = help: the trait `std::marker::Sync` is not implemented for `std::cell::UnsafeCell<MySync<{integer}>>`

error[E0277]: `std::cell::UnsafeCell<NoSync>` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:23:10
   |
LL | fn test<T: Sync>(s: T) {}
   |    ----    ---- required by this bound in `test`
...
LL |     test(uns);
   |          ^^^ `std::cell::UnsafeCell<NoSync>` cannot be shared between threads safely
   |
   = help: the trait `std::marker::Sync` is not implemented for `std::cell::UnsafeCell<NoSync>`

error[E0277]: `std::cell::UnsafeCell<NoSync>` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:27:5
   |
LL | fn test<T: Sync>(s: T) {}
   |    ----    ---- required by this bound in `test`
...
LL |     test(ms);
   |     ^^^^ `std::cell::UnsafeCell<NoSync>` cannot be shared between threads safely
   |
   = help: within `MySync<NoSync>`, the trait `std::marker::Sync` is not implemented for `std::cell::UnsafeCell<NoSync>`
   = note: required because it appears within the type `MySync<NoSync>`

error[E0277]: `NoSync` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:30:10
   |
LL | fn test<T: Sync>(s: T) {}
   |    ----    ---- required by this bound in `test`
...
LL |     test(NoSync);
   |          ^^^^^^ `NoSync` cannot be shared between threads safely
   |
   = help: the trait `std::marker::Sync` is not implemented for `NoSync`

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0277`.
