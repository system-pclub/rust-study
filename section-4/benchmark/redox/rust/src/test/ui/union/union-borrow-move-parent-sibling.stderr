error[E0502]: cannot borrow `u` (via `u.y`) as immutable because it is also borrowed as mutable (via `u.x.0`)
  --> $DIR/union-borrow-move-parent-sibling.rs:53:13
   |
LL |     let a = &mut u.x.0;
   |             ---------- mutable borrow occurs here (via `u.x.0`)
LL |     let b = &u.y;
   |             ^^^^ immutable borrow of `u.y` -- which overlaps with `u.x.0` -- occurs here
LL |     use_borrow(a);
   |                - mutable borrow later used here
   |
   = note: `u.y` is a field of the union `U`, so it overlaps the field `u.x.0`

error[E0382]: use of moved value: `u`
  --> $DIR/union-borrow-move-parent-sibling.rs:60:13
   |
LL |     let u = U { x: ((MockVec::new(), MockVec::new()), MockVec::new()) };
   |         - move occurs because `u` has type `U`, which does not implement the `Copy` trait
LL |     let a = u.x.0;
   |             ----- value moved here
LL |     let b = u.y;
   |             ^^^ value used here after move

error[E0502]: cannot borrow `u` (via `u.y`) as immutable because it is also borrowed as mutable (via `u.x.0.0`)
  --> $DIR/union-borrow-move-parent-sibling.rs:66:13
   |
LL |     let a = &mut (u.x.0).0;
   |             -------------- mutable borrow occurs here (via `u.x.0.0`)
LL |     let b = &u.y;
   |             ^^^^ immutable borrow of `u.y` -- which overlaps with `u.x.0.0` -- occurs here
LL |     use_borrow(a);
   |                - mutable borrow later used here
   |
   = note: `u.y` is a field of the union `U`, so it overlaps the field `u.x.0.0`

error[E0382]: use of moved value: `u`
  --> $DIR/union-borrow-move-parent-sibling.rs:73:13
   |
LL |     let u = U { x: ((MockVec::new(), MockVec::new()), MockVec::new()) };
   |         - move occurs because `u` has type `U`, which does not implement the `Copy` trait
LL |     let a = (u.x.0).0;
   |             --------- value moved here
LL |     let b = u.y;
   |             ^^^ value used here after move

error[E0502]: cannot borrow `u` (via `u.x`) as immutable because it is also borrowed as mutable (via `u.y`)
  --> $DIR/union-borrow-move-parent-sibling.rs:79:13
   |
LL |     let a = &mut *u.y;
   |                   --- mutable borrow occurs here (via `u.y`)
LL |     let b = &u.x;
   |             ^^^^ immutable borrow of `u.x` -- which overlaps with `u.y` -- occurs here
LL |     use_borrow(a);
   |                - mutable borrow later used here
   |
   = note: `u.x` is a field of the union `U`, so it overlaps the field `u.y`

error: aborting due to 5 previous errors

Some errors have detailed explanations: E0382, E0502.
For more information about an error, try `rustc --explain E0382`.
