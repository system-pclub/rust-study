error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:9:5
   |
LL |     drop(&SomeStruct);
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::drop-ref` implied by `-D warnings`
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:9:10
   |
LL |     drop(&SomeStruct);
   |          ^^^^^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:10:5
   |
LL |     forget(&SomeStruct);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::forget-ref` implied by `-D warnings`
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:10:12
   |
LL |     forget(&SomeStruct);
   |            ^^^^^^^^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:13:5
   |
LL |     drop(&owned1);
   |     ^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:13:10
   |
LL |     drop(&owned1);
   |          ^^^^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:14:5
   |
LL |     drop(&&owned1);
   |     ^^^^^^^^^^^^^^
   |
note: argument has type &&SomeStruct
  --> $DIR/drop_forget_ref.rs:14:10
   |
LL |     drop(&&owned1);
   |          ^^^^^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:15:5
   |
LL |     drop(&mut owned1);
   |     ^^^^^^^^^^^^^^^^^
   |
note: argument has type &mut SomeStruct
  --> $DIR/drop_forget_ref.rs:15:10
   |
LL |     drop(&mut owned1);
   |          ^^^^^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:18:5
   |
LL |     forget(&owned2);
   |     ^^^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:18:12
   |
LL |     forget(&owned2);
   |            ^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:19:5
   |
LL |     forget(&&owned2);
   |     ^^^^^^^^^^^^^^^^
   |
note: argument has type &&SomeStruct
  --> $DIR/drop_forget_ref.rs:19:12
   |
LL |     forget(&&owned2);
   |            ^^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:20:5
   |
LL |     forget(&mut owned2);
   |     ^^^^^^^^^^^^^^^^^^^
   |
note: argument has type &mut SomeStruct
  --> $DIR/drop_forget_ref.rs:20:12
   |
LL |     forget(&mut owned2);
   |            ^^^^^^^^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:24:5
   |
LL |     drop(reference1);
   |     ^^^^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:24:10
   |
LL |     drop(reference1);
   |          ^^^^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:25:5
   |
LL |     forget(&*reference1);
   |     ^^^^^^^^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:25:12
   |
LL |     forget(&*reference1);
   |            ^^^^^^^^^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:28:5
   |
LL |     drop(reference2);
   |     ^^^^^^^^^^^^^^^^
   |
note: argument has type &mut SomeStruct
  --> $DIR/drop_forget_ref.rs:28:10
   |
LL |     drop(reference2);
   |          ^^^^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:30:5
   |
LL |     forget(reference3);
   |     ^^^^^^^^^^^^^^^^^^
   |
note: argument has type &mut SomeStruct
  --> $DIR/drop_forget_ref.rs:30:12
   |
LL |     forget(reference3);
   |            ^^^^^^^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:33:5
   |
LL |     drop(reference4);
   |     ^^^^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:33:10
   |
LL |     drop(reference4);
   |          ^^^^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:34:5
   |
LL |     forget(reference4);
   |     ^^^^^^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:34:12
   |
LL |     forget(reference4);
   |            ^^^^^^^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:39:5
   |
LL |     drop(&val);
   |     ^^^^^^^^^^
   |
note: argument has type &T
  --> $DIR/drop_forget_ref.rs:39:10
   |
LL |     drop(&val);
   |          ^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:45:5
   |
LL |     forget(&val);
   |     ^^^^^^^^^^^^
   |
note: argument has type &T
  --> $DIR/drop_forget_ref.rs:45:12
   |
LL |     forget(&val);
   |            ^^^^

error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.
  --> $DIR/drop_forget_ref.rs:53:5
   |
LL |     std::mem::drop(&SomeStruct);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:53:20
   |
LL |     std::mem::drop(&SomeStruct);
   |                    ^^^^^^^^^^^

error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.
  --> $DIR/drop_forget_ref.rs:56:5
   |
LL |     std::mem::forget(&SomeStruct);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: argument has type &SomeStruct
  --> $DIR/drop_forget_ref.rs:56:22
   |
LL |     std::mem::forget(&SomeStruct);
   |                      ^^^^^^^^^^^

error: aborting due to 18 previous errors

